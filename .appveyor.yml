version: 1.0.{build}

clone_depth: 50

environment:
  compiler: mingw

  matrix:
  - target: i686-w64-mingw32
    compiler_path: mingw32
    openssl_path: /c/OpenSSL-Win32
  - target: x86_64-w64-mingw32
    compiler_path: mingw64
    openssl_path: /c/OpenSSL-Win64

install:
- ps: >-
    Function Execute-Command ($commandPath)
    {
        & $commandPath $args 2>&1
        if ( $LastExitCode -ne 0 ) {
            $host.SetShouldExit( $LastExitCode )
        }
    }
    Function Execute-Bash ()
    {
        Execute-Command 'c:\msys64\usr\bin\bash' '-e' '-c' $args
    }
    if ($env:compiler -eq "mingw") {
            $oldpath = ${env:Path} -split ';'
            $buildpath = @("C:\msys64\${env:compiler_path}\bin", "C:\msys64\usr\bin") + $oldpath
            $env:Path = @($buildpath) -join ';'
            $env:libeventversionfile = @("${env:APPVEYOR_BUILD_FOLDER}", ".appveyor-libevent-version") -join '\'
            $env:libeventversion = Get-Content "${env:libeventversionfile}" | Out-String
            Set-Location ".."
            Execute-Bash "git clone https://github.com/libevent/libevent"
            Set-Location "libevent"
            $env:buildlibevent = (Get-Item -Path ".\").FullName
            Execute-Bash "git checkout -q ${env:libeventversion}"
            Execute-Bash "./autogen.sh"
            Execute-Bash "./configure --prefix=/${env:compiler_path} --host=${env:target} --disable-libevent-regress --disable-samples --disable-openssl"
            Execute-Bash "make -j2 install"
    }

build_script:
- ps: >-
    if ($env:compiler -eq "mingw") {
            $oldpath = ${env:Path} -split ';'
            $buildpath = @("C:\msys64\${env:compiler_path}\bin", "C:\msys64\usr\bin") + $oldpath
            $env:Path = @($buildpath) -join ';'
            $env:build = @("${env:APPVEYOR_BUILD_FOLDER}", $env:target) -join '\'
            Set-Location "${env:APPVEYOR_BUILD_FOLDER}"
            Execute-Bash 'autoreconf -i'
            mkdir "${env:build}"
            Set-Location "${env:build}"
            Execute-Bash "../configure --prefix=/${env:compiler_path} --build=${env:target} --host=${env:target} --disable-asciidoc --enable-fatal-warnings --with-libevent-dir=${env:APPVEYOR_BUILD_FOLDER}/libevent --with-openssl-dir=${env:openssl_path}"
            Execute-Bash "V=1 make -j2"
            Execute-Bash "V=1 make -j2 install"
     }

test_script:
- ps: >-
    if ($env:compiler -eq "mingw") {
            $oldpath = ${env:Path} -split ';'
            $buildpath = @("C:\msys64\${env:compiler_path}\bin") + $oldpath
            $env:Path = $buildpath -join ';'
            Set-Location "${env:build}"
            Execute-Bash "VERBOSE=1 make -j2 check"
    }

on_success:
- cmd: C:\Python27\python.exe %APPVEYOR_BUILD_FOLDER%\scripts\test\appveyor-irc-notify.py irc.oftc.net:6697 tor-ci success

on_failure:
- cmd: C:\Python27\python.exe %APPVEYOR_BUILD_FOLDER%\scripts\test\appveyor-irc-notify.py irc.oftc.net:6697 tor-ci failure

## Uncomment to print Remote Desktop Connection details for the build worker,
## and pause the build indefinitely.
on_finish:
#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

## Disabled: The builds failed until I commented out this section. If you
## can make it work, please feel free to re-enable.
# Cache our libevent build so that we don't have to rebuild it every time.
# Re-builds will happen whenever the powershell portion of the "install"
# section of this file changes.
#cache:
#- /c/projects/libevent -> "${env:APPVEYOR_BUILD_FOLDER}"/.appveyor-libevent-version
